#!/bin/sh

OS=`uname`

if [ "${OS}" = "FreeBSD" ]
then
  CC=${CC:-"cc"}
  MAKE_CMD=gmake
else
  CC=${CC:-"gcc"}
  MAKE_CMD=make
fi
MYUID=`id -u`
if [ ! ${MYUID} -eq 0 ]
then
  SUDO="sudo"
else
  SUDO=""
fi
PP_CMD="gpp -C -x"
PYTHON_CMD="`which ${PYTHON_CMD:-"python"}`"

MM_TYPE="${MM_TYPE:-b2bua}"
MM_BRANCH="${MM_BRANCH:-master}"
MM_REV="${MM_REV:-${MM_BRANCH}}"
MM_AUTH="${MM_AUTH:-"simple"}"
RTPP_VERSION="${RTPP_VERSION:-"debug"}"

MM_VER_FULL=`echo ${MM_BRANCH} | sed 's|[.]||g'`
MM_VER=`echo ${MM_BRANCH} | sed 's|[.]|| ; s|[.].*|| ; s/^\(.\{2\}\).*$/\1/'`

RTPPC_TYPE="${RTPPC_TYPE:-udp}"

BASEDIR="${BASEDIR:-$(dirname -- $0)}"
BASEDIR="$(readlink -f -- $BASEDIR)"

BUILDDIR="${BUILDDIR:-${BASEDIR}}"

RTPPROXY_DIST="${RTPPROXY_DIST:-"${BUILDDIR}/dist/rtpproxy"}"
LOCALBASE="/usr/local"
if [ "${RTPP_VERSION}" = "debug" ]
then
  RTPP_SUFF="_debug"
fi
RTPPROXY="${LOCALBASE}/bin/rtpproxy${RTPP_SUFF} --dso ${LOCALBASE}/lib/rtpproxy/rtpp_acct_csv${RTPP_SUFF}.so"
RTPP_SOCK_BARE="${BASEDIR}/rtpproxy.sock"
RTPP_SOCK_UDP="udp:127.0.0.1:22222"
RTPP_SOCK_UNIX="unix:${RTPP_SOCK_BARE}"
RTPP_SOCK_CUNIX="cunix:${BASEDIR}/rtpproxy.csock"
RTPP_SOCK_UDP6="udp6:::1:22222"
RTPP_SOCK_TCP="tcp:127.0.0.1:22222"
RTPP_SOCK_TCP6="tcp6:::1:22222"
RTPP_SOCK_RTP_IO="rtp.io:auto"

fail_rc() {
  RC=${1}
  shift
  echo >&2 "FAILED: (rc=$RC)" "$@"
  if [ -n "$CONTINUE" ] ; then
    return
  fi
  if [ -n "$INTERACTIVE" ] ; then
    read -p "Continue? (y/n)" YN
    if [ "$YN" != 'y' ] ; then
      exit $RC
    fi
  else
    exit $RC
  fi
}

case "${RTPPC_TYPE}" in
  "udp")    RTPP_SOCK_TEST="${RTPP_SOCK_UDP}";;
  "udp6")   RTPP_SOCK_TEST="${RTPP_SOCK_UDP6}";;
  "unix")   RTPP_SOCK_TEST="${RTPP_SOCK_UNIX}";;
  "cunix")  RTPP_SOCK_TEST="${RTPP_SOCK_CUNIX}";;
  "tcp")    RTPP_SOCK_TEST="${RTPP_SOCK_TCP}";;
  "tcp6")   RTPP_SOCK_TEST="${RTPP_SOCK_TCP6}";;
  "rtp.io") RTPP_SOCK_TEST="${RTPP_SOCK_RTP_IO}";;
  *)        fail_rc 1 "Unknown socket type RTPPC_TYPE=${RTPPC_TYPE}";;
esac

MM_INIT_DELAY=1
RTPP_STAT_TIMEOUT=$((36 + ${MM_INIT_DELAY}))
ALICE_TIMEOUT=45
BOB_TIMEOUT=45
TEST_SET="1,2,3,4,5,6,7,8,9,10,early_cancel"
TEST_SET="${TEST_SET},reinvite,reinv_fail,reinv_onhold,reinv_frombob"

if [ "${MM_TYPE}" = "b2bua" -o "${MM_TYPE}" = "go-b2bua" ]
then
  MM_SOCK="unix:${BASEDIR}/b2bua.sock"
  # Python b2bua needs slightly more time to init everything
  MM_INIT_DELAY=5
  # RTP sessions might take up to 60 seconds to disconnect on no media
  RTPP_STAT_TIMEOUT=$((70 + ${MM_INIT_DELAY}))
  RTPP_PRE_STAT_TIMEOUT=$((55 + ${MM_INIT_DELAY}))
  ALICE_TIMEOUT=90
  BOB_TIMEOUT=90
  TEST_SET="${TEST_SET},11,12,13,14,reinv_brkn1,reinv_brkn2,reinv_bad_ack"
fi

MM_ROOT="${MM_ROOT:-"${BUILDDIR}/dist/${MM_TYPE}"}"

if [ "${MM_TYPE}" = "b2bua" ]
then
  TEST_SET="${TEST_SET},inv_brkn1"
fi

#if [ "${MM_TYPE}" != "opensips" -o "${MM_BRANCH}" = "1.11" ]
#then
TEST_SET="${TEST_SET},early_cancel_lost100"
#fi

#if [ "${MM_TYPE}" = "kamailio" ]
#then
#  TEST_SET="${TEST_SET}"
#fi

if [ "${MM_TYPE}" = "opensips" -a \( "${MM_BRANCH}" = "2.3" \
 -o "${MM_BRANCH}" = "master" \) ]
then
#  TEST_SET=`echo ${TEST_SET} | sed 's|,early_cancel_lost100|| ; s|,early_cancel||'`
  MM_ARGS="-d"
fi

forcefail() {
  RC=${1}
  if [ ${RC} -eq 0 ]
  then
    echo >&2 "ALERT, forcefail() called with the bogus 0 RC!"
    ${RC}=1
  fi
  shift
  fail_rc "${RC}" "${@}"
}

fail() {
  RC=$?
  fail_rc "${RC}" "${@}"
}

ok() {
  echo >&2 "OK:" "$@"
}

report_rc_log() {
  RC=${1}
  FAIL_LOGFILES="${2}"
  shift 2
  if [ ${RC} -eq 0 ]
  then
    ok "${@}"
  else
    if [ x"${VT_NO_LOG_DUMP}" = x"" ]
    then
      for logf in ${FAIL_LOGFILES}
      do
        cat -n "${logf}" | grep -a -v 'DBUG:main:GLOBAL:' | grep -a -v 'DBUG:rtpp_proc_async_run:GLOBAL:' >&2 || true
      done
    fi
    fail_rc "${RC}" "${@}"
  fi
}

report_rc() {
  RC=${1}
  shift
  if [ ${RC} -eq 0 ]
  then
    ok "${@}"
  else
    fail_rc "${RC}" "${@}"
  fi
}

report() {
  RC=${?}
  report_rc ${RC} "${@}"
}

reportifnotfail() {
  RC=$?
  if [ "$RC" = 0 ]
  then
    fail_rc 1 "$@"
  else
    true
    ok "$@"
  fi
}
